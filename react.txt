Adding React to our project:

    npx create-react-app my-app
    cd my-app
    npm start






JSX == Javascript with HTML Tags

JSX Interpolation == HTML Tags having their content dependant on 
                    javascript variables(pretty much like simulating 
                    useState Hook) 

Babel == Allows us to use React without using create-react-app



Every Component in React should start with a Capital Letter and 
use CamelCase notation after that.


Styling in React can be done with:
    - Javascript Style Object
    - External CSS File


In order to update the value of a searchBar, we use the onChange attribute.

In order to render a list of items we can use:
    const products = [
        'tooth paste',
        'tooth brush',
        'mouth wash',
        'dental floss',
        'mouth guard'
    ]

    {products.map(value => {return <div>{value}</div>})}

            // OR:

    <ul>
        {products.map(value => {
            return <li key = {value}>{value}</li>
        })}
    </ul>


**** We need to use the Key prop in order for React to be able to identify the <li>



Filtering Items:
    const filteredProducts = products.filter((value) => {
        return value.includes(searchValue)
    })

    <ul>
        {filteredProducts.map(value => {
            return <li key = {value}>{value}</li>
        })}
    </ul>



useEffect is used to call a function whenever a specific component is rendered again.

Whenever we use useEffect, we need to provide as a second argument
an array of all the states which will trigger the function 
when they are rendered again.

Examples:
    // This useEffect will call the function only once, when the app is rendered for the first time/when we refresh the page
    useEffect(() => {
        console.log('First Render')
    }, [])


    // This useEffect will call the function whenever the currentCount state is rerendered
    useEffect(() => {
        console.log(currentCount)
        if(currentCount == 10)
            alert("Count is 10!")
    }, [currentCount])

